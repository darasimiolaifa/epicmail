{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "EPIC Mail.",
    "description" : "This is a web application that allows members to send messages as mail to one another.\n",
    "contact" : {
      "email" : "darasimiolaifa@gmail.com"
    },
    "version" : "1.0.0-oas3"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://darasimi-epicmail.herokuapp.com/api/v1"
  }, {
    "url" : "https://darasimi-epicmail.herokuapp.com/api/v1"
  } ],
  "tags" : [ {
    "name" : "Message",
    "description" : "Operations about the messages exchanged"
  }, {
    "name" : "User",
    "description" : "Operations about user"
  } ],
  "paths" : {
    "/messages" : {
      "get" : {
        "tags" : [ "Message" ],
        "summary" : "Gets all messages",
        "operationId" : "getAllMessages",
        "responses" : {
          "200" : {
            "description" : "Valid input"
          }
        }
      },
      "post" : {
        "tags" : [ "Message" ],
        "summary" : "Sends a new message",
        "operationId" : "sendMessage",
        "requestBody" : {
          "description" : "The message object to be sent.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Message"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Valid input"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/Messages/{id}" : {
      "get" : {
        "tags" : [ "Message" ],
        "summary" : "Get message by id",
        "description" : "Returns a single message",
        "operationId" : "getSpecificMessage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of message to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid id supplied"
          },
          "404" : {
            "description" : "Message not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Message" ],
        "summary" : "Deletes a message from the Message database",
        "operationId" : "deleteSpecificMessage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of message to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type": "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Message not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/Messages/unread" : {
      "get" : {
        "tags" : [ "Message" ],
        "summary" : "Get all unread messages",
        "description" : "Returns an array of unread messages",
        "operationId" : "getAllUnreadMessages",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/Messages/sent" : {
      "get" : {
        "tags" : [ "Message" ],
        "summary" : "Get all sent messages",
        "description" : "Returns an array of sent messages",
        "operationId" : "getAllSentMessages",
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create user",
        "description" : "This action creates a new user.",
        "operationId" : "signup",
        "requestBody" : {
          "description" : "Created user object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },

    "/auth/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "The user name for login",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "The password for login in clear text",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Message" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "senderId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "subject" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "receiverId" : {
            "type" : "string"
          },
          "parentId" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "xml" : {
          "name" : "Message"
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "userStatus" : {
            "type" : "integer",
            "description" : "User Status",
            "format" : "int32"
          }
        },
        "xml" : {
          "name" : "User"
        }
      }
    }
  }
}