{"version":3,"sources":["../../src/database/index.js"],"names":["pool","Pool","connectionString","process","env","DATABASE_URL","query","params","Promise","resolve","reject","then","result","catch","error"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;AAEA,IAAMA,IAAI,GAAG,IAAIC,QAAJ,CAAS;AACpBC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV,CAAT,CAAb;eAIe;AAEbC,EAAAA,KAFa,iBAEPA,MAFO,EAEAC,MAFA,EAEQ;AACnB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,MAAAA,IAAI,CAACM,KAAL,CAAWA,MAAX,EAAkBC,MAAlB,EACGI,IADH,CACQ,UAAAC,MAAM;AAAA,eAAIH,OAAO,CAACG,MAAD,CAAX;AAAA,OADd,EAEGC,KAFH,CAES,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAFd;AAGD,KAJM,CAAP;AAKD;AARY,C","sourcesContent":["import { Pool } from 'pg';\nimport { config } from 'dotenv';\n\nconfig();\n\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL,\n});\n\nexport default {\n  \n  query(query, params) {\n    return new Promise((resolve, reject) => {\n      pool.query(query, params)\n        .then(result => resolve(result))\n        .catch(error => reject(error));\n    });\n  },\n};\n"],"file":"index.js"}