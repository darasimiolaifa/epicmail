{"version":3,"sources":["../../src/controllers/messageControllers.js"],"names":["messageControllers","req","res","user","MessageModel","getAllReceivedMessages","id","allReceivedMessages","getUnreadMessages","unreadMessages","getSentMessages","sentMessages","params","getSpecificMessage","singleMessage","deleteSpecificMessage","deletedMessage","message","sendMessage"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEqBA,kB;;;;;;;;;;;;+CACSC,G,EAAKC,G;;;;;;AACvBC,gBAAAA,I,GAASF,G,CAATE,I;;uBAC0BC,sBAAaC,sBAAb,CAAoCF,IAAI,CAACG,EAAzC,C;;;AAA5BC,gBAAAA,mB;iDACC,6BAAeL,GAAf,EAAoBK,mBAApB,C;;;;;;;;;;;;;;;;;;;;;gDAGsBN,G,EAAKC,G;;;;;;AAC1BC,gBAAAA,I,GAASF,G,CAATE,I;;uBACqBC,sBAAaI,iBAAb,CAA+BL,IAAI,CAACG,EAApC,C;;;AAAvBG,gBAAAA,c;kDACC,6BAAeP,GAAf,EAAoBO,cAApB,C;;;;;;;;;;;;;;;;;;;;;gDAGoBR,G,EAAKC,G;;;;;;;uBACLE,sBAAaM,eAAb,CAA6BT,GAAG,CAACE,IAAjC,C;;;AAArBQ,gBAAAA,Y;kDACC,6BAAeT,GAAf,EAAoBS,YAApB,C;;;;;;;;;;;;;;;;;;;;;gDAGuBV,G,EAAKC,G;;;;;;AAC3BI,gBAAAA,E,GAAOL,GAAG,CAACW,M,CAAXN,E;;uBACoBF,sBAAaS,kBAAb,CAAgCP,EAAhC,C;;;AAAtBQ,gBAAAA,a;kDACC,6BAAeZ,GAAf,EAAoBY,aAApB,C;;;;;;;;;;;;;;;;;;;;;gDAG0Bb,G,EAAKC,G;;;;;;AAC9BI,gBAAAA,E,GAAOL,GAAG,CAACW,M,CAAXN,E;AACAH,gBAAAA,I,GAASF,G,CAATE,I;;uBACqBC,sBAAaW,qBAAb,CAAmCZ,IAAnC,EAAyCG,EAAzC,C;;;AAAvBU,gBAAAA,c;kDACC,6BAAed,GAAf,EAAoB;AAAEe,kBAAAA,OAAO,EAAED,cAAc,CAACC;AAA1B,iBAApB,C;;;;;;;;;;;;;;;;;;;;;gDAGgBhB,G,EAAKC,G;;;;;;;uBACNE,sBAAac,WAAb,CAAyBjB,GAAzB,C;;;AAAhBgB,gBAAAA,O;kDACC,6BAAef,GAAf,EAAoB;AAAEe,kBAAAA,OAAO,EAAPA;AAAF,iBAApB,C","sourcesContent":["import serverResponse from '../utils/serverResponse';\r\nimport MessageModel from '../models/messageModel';\r\n\r\nexport default class messageControllers {\r\n  static async getAllMessages(req, res) {\r\n    const { user } = req;\r\n    const allReceivedMessages = await MessageModel.getAllReceivedMessages(user.id);\r\n    return serverResponse(res, allReceivedMessages);\r\n  }\r\n  \r\n  static async getUnreadMessages(req, res) {\r\n    const { user } = req;\r\n    const unreadMessages = await MessageModel.getUnreadMessages(user.id);\r\n    return serverResponse(res, unreadMessages);\r\n  }\r\n  \r\n  static async getSentMessages(req, res) {\r\n    const sentMessages = await MessageModel.getSentMessages(req.user);\r\n    return serverResponse(res, sentMessages);\r\n  }\r\n  \r\n  static async getSpecificMessage(req, res) {\r\n    const { id } = req.params;\r\n    const singleMessage = await MessageModel.getSpecificMessage(id);\r\n    return serverResponse(res, singleMessage);\r\n  }\r\n  \r\n  static async deleteSpecificMessage(req, res) {\r\n    const { id } = req.params;\r\n    const { user } = req;\r\n    const deletedMessage = await MessageModel.deleteSpecificMessage(user, id);\r\n    return serverResponse(res, { message: deletedMessage.message });\r\n  }\r\n  \r\n  static async sendMessage(req, res) {\r\n    const message = await MessageModel.sendMessage(req);\r\n    return serverResponse(res, { message });\r\n  }\r\n}\r\n"],"file":"messageControllers.js"}