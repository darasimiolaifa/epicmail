{"version":3,"sources":["../../src/controllers/messageControllers.js"],"names":["messageControllers","req","res","allMessages","messageData","unreadMessages","sentMessages","index","body","singleMessage","deletedMessage","splice","message","id","createdOn","Date","moment","HTML5_FMT","DATETIME_LOCAL_MS","status","push"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEqBA,kB;;;;;;;;;mCACGC,G,EAAKC,G,EAAK;AAC9B,UAAMC,WAAW,GAAG,yBAAeC,oBAAf,EAA4B,QAA5B,EAAsC,CAAC,MAAD,EAAS,QAAT,CAAtC,CAApB;AACA,aAAO,6BAAeF,GAAf,EAAoBC,WAApB,CAAP;AACD;;;yCAE2BF,G,EAAKC,G,EAAK;AACpC,UAAMG,cAAc,GAAG,yBAAeD,oBAAf,EAA4B,QAA5B,EAAsC,CAAC,QAAD,CAAtC,CAAvB;AACA,aAAO,6BAAeF,GAAf,EAAoBG,cAApB,CAAP;AACD;;;uCAEyBJ,G,EAAKC,G,EAAK;AAClC,UAAMI,YAAY,GAAG,yBAAeF,oBAAf,EAA4B,QAA5B,EAAsC,CAAC,MAAD,CAAtC,CAArB;AACA,aAAO,6BAAeF,GAAf,EAAoBI,YAApB,CAAP;AACD;;;uCAEyBL,G,EAAKC,G,EAAK;AAAA,UAC1BK,KAD0B,GAChBN,GAAG,CAACO,IADY,CAC1BD,KAD0B;AAElC,UAAME,aAAa,GAAGL,qBAAYG,KAAZ,CAAtB;AACA,aAAO,6BAAeL,GAAf,EAAoBO,aAApB,CAAP;AACD;;;0CAE4BR,G,EAAKC,G,EAAK;AAAA,UAC7BK,KAD6B,GACnBN,GAAG,CAACO,IADe,CAC7BD,KAD6B;;AAErC,UAAMG,cAAc,GAAGN,qBAAYO,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,CAAvB;;AACA,aAAO,6BAAeL,GAAf,EAAoB;AAAEU,QAAAA,OAAO,EAAEF,cAAc,CAACE;AAA1B,OAApB,CAAP;AACD;;;gCAEkBX,G,EAAKC,G,EAAK;AAC3B,UAAMW,EAAE,GAAG,0BAAmBT,oBAAnB,IAAkC,CAA7C;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,CAASC,gBAAOC,SAAP,CAAiBC,iBAA1B,CAAlB;;AACA,UAAMN,OAAO;AACXC,QAAAA,EAAE,EAAFA,EADW;AAEXC,QAAAA,SAAS,EAATA;AAFW,SAGRb,GAAG,CAACO,IAHI;AAIXW,QAAAA,MAAM,EAAE;AAJG,QAAb;;AAMAf,2BAAYgB,IAAZ,CAAiBR,OAAjB;;AACA,aAAO,6BAAeV,GAAf,EAAoB;AAAEU,QAAAA,OAAO,EAAPA;AAAF,OAApB,CAAP;AACD","sourcesContent":["import moment from 'moment';\r\nimport messageData from '../dummy/messageData';\r\nimport generateIDFromData from './authHelpers/idGenerator';\r\nimport serverResponse from './authHelpers/serverResponse';\r\nimport filterMessages from './authHelpers/filterData';\r\n\r\nexport default class messageControllers {\r\n  static getAllMessages(req, res) {\r\n    const allMessages = filterMessages(messageData, 'status', ['read', 'unread']);\r\n    return serverResponse(res, allMessages);\r\n  }\r\n  \r\n  static getAllUnreadMessages(req, res) {\r\n    const unreadMessages = filterMessages(messageData, 'status', ['unread']);\r\n    return serverResponse(res, unreadMessages);\r\n  }\r\n  \r\n  static getAllSentMessages(req, res) {\r\n    const sentMessages = filterMessages(messageData, 'status', ['sent']);\r\n    return serverResponse(res, sentMessages);\r\n  }\r\n  \r\n  static getSpecificMessage(req, res) {\r\n    const { index } = req.body;\r\n    const singleMessage = messageData[index];\r\n    return serverResponse(res, singleMessage);\r\n  }\r\n  \r\n  static deleteSpecificMessage(req, res) {\r\n    const { index } = req.body;\r\n    const deletedMessage = messageData.splice(index, 1)[0];\r\n    return serverResponse(res, { message: deletedMessage.message });\r\n  }\r\n  \r\n  static sendMessage(req, res) {\r\n    const id = generateIDFromData(messageData) + 1;\r\n    const createdOn = new Date(moment.HTML5_FMT.DATETIME_LOCAL_MS);\r\n    const message = {\r\n      id,\r\n      createdOn,\r\n      ...req.body,\r\n      status: 'sent',\r\n    };\r\n    messageData.push(message);\r\n    return serverResponse(res, { message });\r\n  }\r\n}\r\n"],"file":"messageControllers.js"}