{"version":3,"sources":["../../src/tests/auth.spec.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","app","post","send","username","firstName","lastName","password","end","err","res","data","body","have","status","be","json","a","property","error","not","emptyValues","an","include","invalidInput","token"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport app from '../server';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('Authentication API', () => {\n  describe('POST /api/v1/auth/signup', () => {\n    it('should sign up the new user and return a token', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send({\n          username: 'imonitieyahoo',\n          firstName: 'Imonitie',\n          lastName: 'Yahoo',\n          password: 'imonitie.yahoo',\n        })\n        .end((err, res) => {\n          const { data } = res.body;\n          res.should.have.status(201);\n          // eslint-disable-next-line no-unused-expressions\n          res.should.be.json;\n          res.body.should.be.a('object');\n          res.body.should.have.property('status', 201);\n          res.body.should.have.property('data');\n          data.should.be.a('object');\n          data.should.have.property('token');\n          done();\n        });\n    });\n    \n    it('should return an error when one of the field is missing', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send({\n          firstName: 'Imonitie',\n          lastName: 'Yahoo',\n          password: '',\n          username: 'imonitie.yahoo',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.not.have.property('data');\n          res.body.should.have.property('status', 400);\n          res.body.should.have.property('error');\n          error.should.have.property('missingValues');\n          error.emptyValues.should.be.an('array');\n          error.emptyValues[0].should.include('password');\n          done();\n        });\n    });\n    it('should return an error for a username already in the database', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send({\n          username: 'imonitieyahoo',\n          firstName: 'Isaiah',\n          lastName: 'Ibikunle',\n          password: 'monkeys4real',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.have.property('status', 400);\n          res.body.should.have.property('error');\n          error.should.have.property('invalidInput');\n          error.invalidInput.should.be.an('object');\n          error.invalidInput.should.have.property('username');\n          done();\n        });\n    });\n    it('should return an error for a username that contains invalid characters', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send({\n          username: '$#@ollarjay)(',\n          firstName: 'Isaiah',\n          lastName: 'Ibikunle',\n          password: 'monkeys4real',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.have.property('status', 400);\n          res.body.should.have.property('error');\n          error.should.have.property('invalidInput');\n          error.invalidInput.should.be.an('object');\n          error.invalidInput.should.have.property('username');\n          done();\n        });\n    });\n    it('should reject passwords with less than 8 characters', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/signup')\n        .send({\n          username: 'darasimiolaifa',\n          firstName: 'Isaiah',\n          lastName: 'Ibikunle',\n          password: 'monk',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.have.property('status', 400);\n          res.body.should.have.property('error');\n          error.should.have.property('invalidInput');\n          error.invalidInput.should.be.an('object');\n          error.invalidInput.should.have.property('password');\n          done();\n        });\n    });\n  });\n  describe('POST /api/v1/auth/login', () => {\n    it('should return a 400 error if any of the fields is missing', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send({\n          username: 'imonitieyahoo',\n          password: '',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.not.have.property('data');\n          res.body.should.have.property('status', 400);\n          res.body.should.have.property('error');\n          error.should.have.property('missingValues');\n          error.emptyValues.should.be.an('array');\n          error.emptyValues[0].should.include('password');\n          done();\n        });\n    });\n    it('should return a 404 error if no stored username matches the one specified', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send({\n          username: 'badUser',\n          password: 'badPassword',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(404);\n          res.body.should.have.property('status', 404);\n          res.body.should.have.property('error');\n          error.should.have.property('invalidInput');\n          error.invalidInput.should.be.an('object');\n          error.invalidInput.should.have.property('username');\n          done();\n        });\n    });\n    it('should return a 400 error the stored password does not match the one specified', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send({\n          username: 'imonitieyahoo',\n          password: 'wrongpassword',\n        })\n        .end((err, res) => {\n          const { error } = res.body;\n          res.should.have.status(400);\n          res.body.should.have.property('status', 400);\n          res.body.should.property('error');\n          error.should.have.property('invalidInput');\n          error.invalidInput.should.be.an('object');\n          error.invalidInput.should.have.property('password');\n          done();\n        });\n    });\n    it('should sign in the new user and return a token', (done) => {\n      chai.request(app)\n        .post('/api/v1/auth/login')\n        .send({\n          username: 'imonitieyahoo',\n          password: 'imonitie.yahoo',\n        })\n        .end((err, res) => {\n          const { data } = res.body;\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('status', 200);\n          data.should.have.property('token');\n          data.token.should.be.a('string');\n          done();\n        });\n    });\n  });\n});\n"],"file":"auth.spec.js"}