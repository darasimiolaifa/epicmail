{"version":3,"sources":["../../../src/middleware/validation/validatePassword.js"],"names":["validatePassword","url","users","password","username","passwordErrors","statusCode","hasErrors","length","push","foundUser","find","user","bcrypt","hashSync","salt"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,KAAN,EAAaC,QAAb,EAAuBC,QAAvB,EAAoC;AAC3D,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAIC,UAAU,GAAG,GAAjB;AACA,MAAIC,SAAJ;;AACA,MAAIN,GAAG,KAAK,qBAAZ,EAAmC;AACjC,QAAIE,QAAQ,CAACK,MAAT,GAAkB,CAAtB,EAAyB;AACvBH,MAAAA,cAAc,CAACI,IAAf,CAAoB,kDAApB;AACAF,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GALD,MAKO;AACL,QAAMG,SAAS,GAAGR,KAAK,CAACS,IAAN,CAAW,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACR,QAAL,KAAkBA,QAAtB;AAAA,KAAf,CAAlB;;AACA,QAAIM,SAAJ,EAAe;AACb,UAAIA,SAAS,CAACP,QAAV,KAAuBU,kBAAOC,QAAP,CAAgBX,QAAhB,EAA0BO,SAAS,CAACK,IAApC,CAA3B,EAAsE;AACpEV,QAAAA,cAAc,CAACI,IAAf,CAAoB,sCAApB;AACAF,QAAAA,SAAS,GAAG,IAAZ;AACD;AACF,KALD,MAKO;AACLD,MAAAA,UAAU,GAAG,GAAb;AACD;AACF;;AAED,SAAO;AAAED,IAAAA,cAAc,EAAdA,cAAF;AAAkBC,IAAAA,UAAU,EAAVA,UAAlB;AAA8BC,IAAAA,SAAS,EAATA;AAA9B,GAAP;AACD,CAtBD;;eAwBeP,gB","sourcesContent":["import bcrypt from 'bcryptjs';\r\n\r\nconst validatePassword = (url, users, password, username) => {\r\n  const passwordErrors = [];\r\n  let statusCode = 400;\r\n  let hasErrors;\r\n  if (url === '/api/v1/auth/signup') {\r\n    if (password.length < 8) {\r\n      passwordErrors.push('Passwords must be 8 characters or more in length');\r\n      hasErrors = true;\r\n    }\r\n  } else {\r\n    const foundUser = users.find(user => user.username === username);\r\n    if (foundUser) {\r\n      if (foundUser.password !== bcrypt.hashSync(password, foundUser.salt)) {\r\n        passwordErrors.push('Username and password does not match');\r\n        hasErrors = true;\r\n      }\r\n    } else {\r\n      statusCode = 404;\r\n    }\r\n  }\r\n  \r\n  return { passwordErrors, statusCode, hasErrors };\r\n};\r\n\r\nexport default validatePassword;\r\n"],"file":"validatePassword.js"}