{"version":3,"sources":["../../../src/middleware/validation/validateUsername.js"],"names":["validateUsername","url","users","username","usernameErrors","hasErrors","statusCode","findIndex","user","push","search","RegExp","length","userIndex"],"mappings":";;;;;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,KAAN,EAAaC,QAAb,EAA0B;AACjD,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;;AAEA,MAAIL,GAAG,KAAK,qBAAZ,EAAmC;AAEjC,QAAIC,KAAK,CAACK,SAAN,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,QAAL,KAAkBA,QAAtB;AAAA,KAApB,IAAsD,CAAC,CAA3D,EAA8D;AAC5DC,MAAAA,cAAc,CAACK,IAAf,CAAoB,qDAApB;AACD;;AAED,QAAIN,QAAQ,CAACO,MAAT,CAAgB,IAAIC,MAAJ,CAAW,gBAAX,CAAhB,IAAgD,CAAC,CAArD,EAAwD;AACtDP,MAAAA,cAAc,CAACK,IAAf,CAAoB,+EAApB;AACD;;AAED,QAAIL,cAAc,CAACQ,MAAf,GAAwB,CAA5B,EAA+B;AAC7BN,MAAAA,UAAU,GAAG,GAAb;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GAdD,MAgBK;AACH,QAAMQ,SAAS,GAAGX,KAAK,CAACK,SAAN,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,QAAL,KAAkBA,QAAtB;AAAA,KAApB,MAAwD,CAAC,CAA3E;;AACA,QAAIU,SAAJ,EAAe;AACbT,MAAAA,cAAc,CAACK,IAAf,CAAoB,8CAApB;AACAH,MAAAA,UAAU,GAAG,GAAb;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AAED,SAAO;AAAED,IAAAA,cAAc,EAAdA,cAAF;AAAkBE,IAAAA,UAAU,EAAVA,UAAlB;AAA8BD,IAAAA,SAAS,EAATA;AAA9B,GAAP;AACD,CA/BD;;eAiCeL,gB","sourcesContent":["const validateUsername = (url, users, username) => {\n  const usernameErrors = [];\n  let hasErrors;\n  let statusCode;\n  \n  if (url === '/api/v1/auth/signup') {\n    \n    if (users.findIndex(user => user.username === username) > -1) {\n      usernameErrors.push('The username already exists. Please choose another.');\n    }\n    \n    if (username.search(new RegExp(/[^0-9A-za-z._]/)) > -1) {\n      usernameErrors.push('Username should contain only alphanumeric, the dot, and underscore characters');\n    }\n    \n    if (usernameErrors.length > 0) {\n      statusCode = 400;\n      hasErrors = true;\n    }\n  } \n  \n  else {\n    const userIndex = users.findIndex(user => user.username === username) === -1;\n    if (userIndex) {\n      usernameErrors.push('This username does not exist in our records.');\n      statusCode = 404;\n      hasErrors = true;\n    }\n  }\n  \n  return { usernameErrors, statusCode, hasErrors };\n};\n\nexport default validateUsername;\n"],"file":"validateUsername.js"}