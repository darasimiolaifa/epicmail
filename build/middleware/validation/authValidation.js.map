{"version":3,"sources":["../../../src/middleware/validation/authValidation.js"],"names":["validateAuthData","req","res","next","required","url","body","error","invalidInput","status","missingValueStatus","hasErrors","missingValues","statusCode","invalidUsername","users","username","usernameErrors","invalidPassword","password","passwordErrors","send"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAIC,QAAJ;AAD2C,MAEnCC,GAFmC,GAErBJ,GAFqB,CAEnCI,GAFmC;AAAA,MAE9BC,IAF8B,GAErBL,GAFqB,CAE9BK,IAF8B;;AAI3C,MAAID,GAAG,KAAK,qBAAZ,EAAmC;AACjCD,IAAAA,QAAQ,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,UAA1B,EAAsC,UAAtC,CAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,CAAC,UAAD,EAAa,UAAb,CAAX;AACD;;AAED,MAAMG,KAAK,GAAG;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAd;AACA,MAAIC,MAAM,GAAG,GAAb;AAEA,MAAMC,kBAAkB,GAAG,yCAA2BT,GAAG,CAACK,IAA/B,EAAqCF,QAArC,CAA3B;;AACA,MAAIM,kBAAkB,CAACC,SAAvB,EAAkC;AAAA,QACxBC,aADwB,GACMF,kBADN,CACxBE,aADwB;AAAA,QACTC,UADS,GACMH,kBADN,CACTG,UADS;AAEhCN,IAAAA,KAAK,CAACK,aAAN,GAAsBA,aAAtB;AACAH,IAAAA,MAAM,GAAGI,UAAT;AACD;;AAED,MAAMC,eAAe,GAAG,+BAAiBT,GAAjB,EAAsBU,kBAAtB,EAA6BT,IAAI,CAACU,QAAlC,CAAxB;;AACA,MAAIF,eAAe,CAACH,SAApB,EAA+B;AAAA,QACrBM,cADqB,GACUH,eADV,CACrBG,cADqB;AAAA,QACLJ,WADK,GACUC,eADV,CACLD,UADK;AAE7BN,IAAAA,KAAK,CAACC,YAAN,CAAmBQ,QAAnB,GAA8BC,cAA9B;AACAR,IAAAA,MAAM,GAAGI,WAAT;AACD;;AAED,MAAMK,eAAe,GAAG,+BAAiBb,GAAjB,EAAsBU,kBAAtB,EAA6BT,IAAI,CAACa,QAAlC,EAA4Cb,IAAI,CAACU,QAAjD,CAAxB;;AACA,MAAIE,eAAe,CAACP,SAApB,EAA+B;AAAA,QACrBS,cADqB,GACUF,eADV,CACrBE,cADqB;AAAA,QACLP,YADK,GACUK,eADV,CACLL,UADK;AAE7BN,IAAAA,KAAK,CAACC,YAAN,CAAmBW,QAAnB,GAA8BC,cAA9B;AACAX,IAAAA,MAAM,GAAGI,YAAT;AACD;;AAED,MAAIJ,MAAM,KAAK,GAAf,EAAoB;AAClB,WAAOP,GAAG,CAACO,MAAJ,CAAWA,MAAX,EAAmBY,IAAnB,CAAwB;AAC7BZ,MAAAA,MAAM,EAANA,MAD6B;AAE7BF,MAAAA,KAAK,EAALA;AAF6B,KAAxB,CAAP;AAID;;AACDJ,EAAAA,IAAI;AACL,CAzCD;;eA2CeH,gB","sourcesContent":["import checkMissingRequiredValues from './checkMissingRequiredValues';\nimport validateUsername from './validateUsername';\nimport validatePassword from './validatePassword';\nimport users from '../../dummy/usersData';\n\nconst validateAuthData = (req, res, next) => {\n  let required;\n  const { url, body } = req;\n  \n  if (url === '/api/v1/auth/signup') {\n    required = ['firstname', 'lastname', 'username', 'password'];\n  } else {\n    required = ['username', 'password'];\n  }\n  \n  const error = { invalidInput: {} };\n  let status = 200;\n  \n  const missingValueStatus = checkMissingRequiredValues(req.body, required);\n  if (missingValueStatus.hasErrors) {\n    const { missingValues, statusCode } = missingValueStatus;\n    error.missingValues = missingValues;\n    status = statusCode;\n  }\n  \n  const invalidUsername = validateUsername(url, users, body.username);\n  if (invalidUsername.hasErrors) {\n    const { usernameErrors, statusCode } = invalidUsername;\n    error.invalidInput.username = usernameErrors;\n    status = statusCode;\n  }\n  \n  const invalidPassword = validatePassword(url, users, body.password, body.username);\n  if (invalidPassword.hasErrors) {\n    const { passwordErrors, statusCode } = invalidPassword;\n    error.invalidInput.password = passwordErrors;\n    status = statusCode;\n  }\n  \n  if (status !== 200) {\n    return res.status(status).send({\n      status,\n      error,\n    });\n  }\n  next();\n};\n\nexport default validateAuthData;\n"],"file":"authValidation.js"}