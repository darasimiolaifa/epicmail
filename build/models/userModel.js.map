{"version":3,"sources":["../../src/models/userModel.js"],"names":["UserModel","query","queryFunction","rows","id","user","payload","username","password","firstName","lastName","bcrypt","genSalt","salt","hash","hashedPassword","email","createdOn","Date"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEMA,S;;;;;;;;;;;;;;;;;;;AAEIC,gBAAAA,K,GAAQ,qB;;;uBAEWC,kBAAcD,KAAd,CAAoBA,KAApB,C;;;;AAAfE,gBAAAA,I,QAAAA,I;iDACDA,I;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMcC,E;;;;;;;AACjBH,gBAAAA,K,GAAQ,mC;;;uBAEWC,kBAAcD,KAAd,CAAoBA,KAApB,EAA2B,CAACG,EAAD,CAA3B,C;;;;AAAfC,gBAAAA,I,SAAAA,I;kDACDA,I;;;;;;;;;;;;;;;;;;;;;;;;;;gDAMaC,O;;;;;;;AAEpBC,gBAAAA,Q,GACED,O,CADFC,Q,EAAUC,Q,GACRF,O,CADQE,Q,EAAUC,S,GAClBH,O,CADkBG,S,EAAWC,Q,GAC7BJ,O,CAD6BI,Q;;uBAEdC,kBAAOC,OAAP,E;;;AAAbC,gBAAAA,I;;uBACuBF,kBAAOG,IAAP,CAAYN,QAAZ,EAAsBK,IAAtB,C;;;AAAvBE,gBAAAA,c;AACAC,gBAAAA,K,aAAWT,Q;AACXU,gBAAAA,S,GAAY,IAAIC,IAAJ,E;AACZjB,gBAAAA,K,GAAQ,4H;;;uBAEWC,kBAAcD,KAAd,CAAoBA,KAApB,EACrB,CAACQ,SAAD,EAAYC,QAAZ,EAAsBK,cAAtB,EAAsCE,SAAtC,EAAiDV,QAAjD,EAA2DS,KAA3D,CADqB,C;;;;AAAfb,gBAAAA,I,SAAAA,I;kDAEDA,I;;;;;;;;;;;;;;;;;;;;;;;;;;eAOEH,S","sourcesContent":["import bcrypt from 'bcryptjs';\r\nimport queryFunction from '../database';\r\n\r\nclass UserModel {\r\n  static async getAllusers() {\r\n    const query = 'SELECT * FROM users';\r\n    try {\r\n      const { rows } = await queryFunction.query(query);\r\n      return rows;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  \r\n  static async getUserbyId(id) {\r\n    const query = 'SELECT * FROM users wHERE id = $1';\r\n    try {\r\n      const { user } = await queryFunction.query(query, [id]);\r\n      return user;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n  \r\n  static async createUser(payload) {\r\n    const {\r\n      username, password, firstName, lastName,\r\n    } = payload;\r\n    const salt = await bcrypt.genSalt();\r\n    const hashedPassword = await bcrypt.hash(password, salt);\r\n    const email = `${username}@epicmail.com`;\r\n    const createdOn = new Date();\r\n    const query = 'INSERT INTO users(first_name, last_name, password, created_on, username, email) VALUES($1, $2, $3, $4, $5, $6) RETURNING *';\r\n    try {\r\n      const { rows } = await queryFunction.query(query,\r\n        [firstName, lastName, hashedPassword, createdOn, username, email]);\r\n      return rows;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserModel;\r\n"],"file":"userModel.js"}